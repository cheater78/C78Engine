# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  GLFW_config = debug
  GLAD_config = debug
  C78Engine_config = debug
  C78TestApp_config = debug

else ifeq ($(config),release)
  GLFW_config = release
  GLAD_config = release
  C78Engine_config = release
  C78TestApp_config = release

else ifeq ($(config),dist)
  GLFW_config = dist
  GLAD_config = dist
  C78Engine_config = dist
  C78TestApp_config = dist

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := GLFW GLAD C78Engine C78TestApp

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

GLFW:
ifneq (,$(GLFW_config))
	@echo "==== Building GLFW ($(GLFW_config)) ===="
	@${MAKE} --no-print-directory -C C78Engine/vendor/glfw -f Makefile config=$(GLFW_config)
endif

GLAD:
ifneq (,$(GLAD_config))
	@echo "==== Building GLAD ($(GLAD_config)) ===="
	@${MAKE} --no-print-directory -C C78Engine/vendor/glad -f Makefile config=$(GLAD_config)
endif

C78Engine: GLFW GLAD
ifneq (,$(C78Engine_config))
	@echo "==== Building C78Engine ($(C78Engine_config)) ===="
	@${MAKE} --no-print-directory -C C78Engine -f Makefile config=$(C78Engine_config)
endif

C78TestApp: C78Engine
ifneq (,$(C78TestApp_config))
	@echo "==== Building C78TestApp ($(C78TestApp_config)) ===="
	@${MAKE} --no-print-directory -C C78TestApp -f Makefile config=$(C78TestApp_config)
endif

clean:
	@${MAKE} --no-print-directory -C C78Engine/vendor/glfw -f Makefile clean
	@${MAKE} --no-print-directory -C C78Engine/vendor/glad -f Makefile clean
	@${MAKE} --no-print-directory -C C78Engine -f Makefile clean
	@${MAKE} --no-print-directory -C C78TestApp -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo "  dist"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   GLFW"
	@echo "   GLAD"
	@echo "   C78Engine"
	@echo "   C78TestApp"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"